// Code generated by MockGen. DO NOT EDIT.
// Source: ./externalclient.go

// Package testdata is a generated GoMock package.
package testdata

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	entities "github.com/sheremet-o/cryptochaser/internal/entities"
)

// MockExternalClient is a mock of ExternalClient interface.
type MockExternalClient struct {
	ctrl     *gomock.Controller
	recorder *MockExternalClientMockRecorder
}

// MockExternalClientMockRecorder is the mock recorder for MockExternalClient.
type MockExternalClientMockRecorder struct {
	mock *MockExternalClient
}

// NewMockExternalClient creates a new mock instance.
func NewMockExternalClient(ctrl *gomock.Controller) *MockExternalClient {
	mock := &MockExternalClient{ctrl: ctrl}
	mock.recorder = &MockExternalClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockExternalClient) EXPECT() *MockExternalClientMockRecorder {
	return m.recorder
}

// GetActualCoin mocks base method.
func (m *MockExternalClient) GetActualCoin(ctx context.Context, titles []string) ([]*entities.Coin, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetActualCoin", ctx, titles)
	ret0, _ := ret[0].([]*entities.Coin)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetActualCoin indicates an expected call of GetActualCoin.
func (mr *MockExternalClientMockRecorder) GetActualCoin(ctx, titles interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetActualCoin", reflect.TypeOf((*MockExternalClient)(nil).GetActualCoin), ctx, titles)
}
